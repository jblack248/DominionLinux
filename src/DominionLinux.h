#ifndef DOMINIONLINUX_H
#define DOMINIONLINUX_H

#include <QMainWindow>
#include <QToolButton>
#include <QProgressBar>

#include "CardList.h"

namespace Ui {
class DominionLinux;
}

class DominionLinux : public QMainWindow
{
	Q_OBJECT

public:
	explicit DominionLinux(QWidget *parent = 0);
	~DominionLinux();


private:
	Ui::DominionLinux	*ui;

    CardList card;    // stores information for all existing cards

//Card Generating Loop, dependant on images in "Cards" directory and its resource file.
	void			createList();
	void			createCards(QStringList list);
	QList<QToolButton *>	*list_Button;
	QString			*img_src;//For setting tool tips
	QStringList		*list_String;

	QList<const char*>	*list_Slots;

//Example for the stacks, showcasing the QIcons along with the QProgressbar
	void			createExample(QStringList list);
	QProgressBar		*progressBar_Example;

private slots:

//Match Setup
	void on_checkBox_2Players_toggled(bool checked);
	void on_checkBox_3Players_toggled(bool checked);
	void on_checkBox_4Players_toggled(bool checked);
	void on_checkBox_5Players_toggled(bool checked);
	void on_checkBox_6Players_toggled(bool checked);
	void on_flag_Play_valueChanged(int arg1);

//Only touch the following code if a new card type is added.
	void on_checkBox_Action_toggled(bool checked);
	void on_checkBox_Victory_toggled(bool checked);
	void on_checkBox_Curse_toggled(bool checked);
	void on_checkBox_Knight_toggled(bool checked);
	void on_checkBox_Prize_toggled(bool checked);
	void on_checkBox_Ruins_toggled(bool checked);
	void on_checkBox_Treasure_toggled(bool checked);
	void on_checkBox_Attack_toggled(bool checked);
	void on_checkBox_Duration_toggled(bool checked);
	void on_checkBox_Looter_toggled(bool checked);
	void on_checkBox_Reaction_toggled(bool checked);
	void on_checkBox_Shelter_toggled(bool checked);

	void on_flag_Action_valueChanged(int arg1);
	void on_flag_Curse_valueChanged(int arg1);
	void on_flag_Prize_valueChanged(int arg1);
	void on_flag_Knight_valueChanged(int arg1);
	void on_flag_Ruins_valueChanged(int arg1);
	void on_flag_Treasure_valueChanged(int arg1);
	void on_flag_Attack_valueChanged(int arg1);
	void on_flag_Duration_valueChanged(int arg1);
	void on_flag_Looter_valueChanged(int arg1);
	void on_flag_Reaction_valueChanged(int arg1);
	void on_flag_Shelter_valueChanged(int arg1);
	void on_flag_Victory_valueChanged(int arg1);
	void on_flag_ActionLooter_valueChanged(int arg1);
	void on_flag_ActionPrize_valueChanged(int arg1);
	void on_flag_ActionShelter_valueChanged(int arg1);
	void on_flag_AttackAction_valueChanged(int arg1);
	void on_flag_AttackActionKnight_valueChanged(int arg1);
	void on_flag_AttackActionLooter_valueChanged(int arg1);
	void on_flag_AttackActionPrize_valueChanged(int arg1);
	void on_flag_AttackVictoryKnightAction_valueChanged(int arg1);
	void on_flag_DurationAction_valueChanged(int arg1);
	void on_flag_ReactionAction_valueChanged(int arg1);
	void on_flag_ReactionShelter_valueChanged(int arg1);
	void on_flag_RuinsAction_valueChanged(int arg1);
	void on_flag_TreasurePrize_valueChanged(int arg1);
	void on_flag_VictoryAction_valueChanged(int arg1);
	void on_flag_VictoryShelter_valueChanged(int arg1);
	void on_flag_VictoryTreasure_valueChanged(int arg1);

//Generated via python script, "Generate Header File.txt"
	//void SLOTcard_AbandonedMine(bool Checked=false, bool matchOpponent=false);
	void SLOTcard_AbandonedMine(bool Checked=false, bool matchOpponent=false);
	void SLOTcard_Adventurer(bool Checked=false);
	void SLOTcard_Advisor(bool Checked=false);
	void SLOTcard_Alchemist(bool Checked=false);
	void SLOTcard_Altar(bool Checked=false);
	void SLOTcard_Ambassador(bool Checked=false);
	void SLOTcard_Apothecary(bool Checked=false);
	void SLOTcard_Apprentice(bool Checked=false);
	void SLOTcard_Armory(bool Checked=false);
	void SLOTcard_BagofGold(bool Checked=false);
	void SLOTcard_Baker(bool Checked=false);
	void SLOTcard_BanditCamp(bool Checked=false);
	void SLOTcard_BandofMisfits(bool Checked=false);
	void SLOTcard_Bank(bool Checked=false);
	void SLOTcard_Baron(bool Checked=false);
	void SLOTcard_Bazaar(bool Checked=false);
	void SLOTcard_Beggar(bool Checked=false);
	void SLOTcard_Bishop(bool Checked=false);
	void SLOTcard_BlackMarket(bool Checked=false);
	void SLOTcard_Bridge(bool Checked=false);
	void SLOTcard_Bureaucrat(bool Checked=false);
	void SLOTcard_Butcher(bool Checked=false);
	void SLOTcard_CandlestickMaker(bool Checked=false);
	void SLOTcard_Caravan(bool Checked=false);
	void SLOTcard_Catacombs(bool Checked=false);
	void SLOTcard_Cellar(bool Checked=false);
	void SLOTcard_Chancellor(bool Checked=false);
	void SLOTcard_Chapel(bool Checked=false);
	void SLOTcard_City(bool Checked=false);
	void SLOTcard_Colony(bool Checked=false);
	void SLOTcard_Conspirator(bool Checked=false);
	void SLOTcard_Contraband(bool Checked=false);
	void SLOTcard_Copper(bool Checked=false, bool Game=false);
	void SLOTcard_Coppersmith(bool Checked=false);
	void SLOTcard_CouncilRoom(bool Checked=false);
	void SLOTcard_Count(bool Checked=false);
	void SLOTcard_Counterfeit(bool Checked=false);
	void SLOTcard_CountingHouse(bool Checked=false);
	void SLOTcard_Courtyard(bool Checked=false);
	void SLOTcard_Cultist(bool Checked=false);
	void SLOTcard_Curse(bool Checked=false);
	void SLOTcard_Cutpurse(bool Checked=false);
	void SLOTcard_DameAnna(bool Checked=false);
	void SLOTcard_DameJosephine(bool Checked=false);
	void SLOTcard_DameMolly(bool Checked=false);
	void SLOTcard_DameNatalie(bool Checked=false);
	void SLOTcard_DameSylvia(bool Checked=false);
	void SLOTcard_DeathCart(bool Checked=false);
	void SLOTcard_Diadem(bool Checked=false);
	void SLOTcard_Doctor(bool Checked=false);
	void SLOTcard_Duke(bool Checked=false);
	void SLOTcard_Dutchy(bool Checked=false);
	void SLOTcard_Embargo(bool Checked=false);
	void SLOTcard_Envoy(bool Checked=false);
	void SLOTcard_Estate(bool Checked=false);
	void SLOTcard_Expand(bool Checked=false);
	void SLOTcard_Explorer(bool Checked=false);
	void SLOTcard_Fairgrounds(bool Checked=false);
	void SLOTcard_Familiar(bool Checked=false);
	void SLOTcard_FarmingVillage(bool Checked=false);
	void SLOTcard_Feast(bool Checked=false);
	void SLOTcard_Feodum(bool Checked=false);
	void SLOTcard_Festival(bool Checked=false);
	void SLOTcard_FishingVillage(bool Checked=false);
	void SLOTcard_Followers(bool Checked=false);
	void SLOTcard_Forager(bool Checked=false);
	void SLOTcard_Forge(bool Checked=false);
	void SLOTcard_Fortress(bool Checked=false);
	void SLOTcard_FortuneTeller(bool Checked=false);
	void SLOTcard_Gardens(bool Checked=false);
	void SLOTcard_GhostShip(bool Checked=false);
	void SLOTcard_Gold(bool Checked=false);
	void SLOTcard_Golem(bool Checked=false);
	void SLOTcard_Goons(bool Checked=false);
	void SLOTcard_Governor(bool Checked=false);
	void SLOTcard_GrandMarket(bool Checked=false);
	void SLOTcard_Graverobber(bool Checked=false);
	void SLOTcard_GreatHall(bool Checked=false);
	void SLOTcard_Hamlet(bool Checked=false);
	void SLOTcard_Harem(bool Checked=false);
	void SLOTcard_Harvest(bool Checked=false);
	void SLOTcard_Haven(bool Checked=false);
	void SLOTcard_Herald(bool Checked=false);
	void SLOTcard_Herbalist(bool Checked=false);
	void SLOTcard_Hermit(bool Checked=false);
	void SLOTcard_Hoard(bool Checked=false);
	void SLOTcard_HornofPlenty(bool Checked=false);
	void SLOTcard_HorseTraders(bool Checked=false);
	void SLOTcard_Hovel(bool Checked=false);
	void SLOTcard_HuntingGrounds(bool Checked=false);
	void SLOTcard_HuntingParty(bool Checked=false);
	void SLOTcard_Ironmonger(bool Checked=false);
	void SLOTcard_Ironworks(bool Checked=false);
	void SLOTcard_Island(bool Checked=false);
	void SLOTcard_Jester(bool Checked=false);
	void SLOTcard_Journeyman(bool Checked=false);
	void SLOTcard_JunkDealer(bool Checked=false);
	void SLOTcard_KingsCourt(bool Checked=false);
	void SLOTcard_Laboratory(bool Checked=false);
	void SLOTcard_Library(bool Checked=false);
	void SLOTcard_Lighthouse(bool Checked=false);
	void SLOTcard_Loan(bool Checked=false);
	void SLOTcard_Lookout(bool Checked=false);
	void SLOTcard_Madman(bool Checked=false);
	void SLOTcard_Marauder(bool Checked=false);
	void SLOTcard_Market(bool Checked=false);
	void SLOTcard_MarketSquare(bool Checked=false);
	void SLOTcard_Masquerade(bool Checked=false);
	void SLOTcard_Masterpiece(bool Checked=false);
	void SLOTcard_Menagerie(bool Checked=false);
	void SLOTcard_Mercenary(bool Checked=false);
	void SLOTcard_MerchantGuild(bool Checked=false);
	void SLOTcard_MerchantShip(bool Checked=false);
	void SLOTcard_Militia(bool Checked=false);
	void SLOTcard_Mine(bool Checked=false);
	void SLOTcard_MiningVillage(bool Checked=false);
	void SLOTcard_Minion(bool Checked=false);
	void SLOTcard_Mint(bool Checked=false);
	void SLOTcard_Moat(bool Checked=false);
	void SLOTcard_Moneylender(bool Checked=false);
	void SLOTcard_Monument(bool Checked=false);
	void SLOTcard_Mountebank(bool Checked=false);
	void SLOTcard_Mystic(bool Checked=false);
	void SLOTcard_NativeVillage(bool Checked=false);
	void SLOTcard_Navigator(bool Checked=false);
	void SLOTcard_Necropolis(bool Checked=false);
	void SLOTcard_Nobles(bool Checked=false);
	void SLOTcard_Outpost(bool Checked=false);
	void SLOTcard_OvergrownEstate(bool Checked=false);
	void SLOTcard_Pawn(bool Checked=false);
	void SLOTcard_PearlDiver(bool Checked=false);
	void SLOTcard_Peddler(bool Checked=false);
	void SLOTcard_PhilosophersStone(bool Checked=false);
	void SLOTcard_Pillage(bool Checked=false);
	void SLOTcard_PirateShip(bool Checked=false);
	void SLOTcard_Platinum(bool Checked=false);
	void SLOTcard_Plaza(bool Checked=false);
	void SLOTcard_PoorHouse(bool Checked=false);
	void SLOTcard_Possession(bool Checked=false);
	void SLOTcard_Potion(bool Checked=false);
	void SLOTcard_Princess(bool Checked=false);
	void SLOTcard_Procession(bool Checked=false);
	void SLOTcard_Province(bool Checked=false);
	void SLOTcard_Quarry(bool Checked=false);
	void SLOTcard_Rabble(bool Checked=false);
	void SLOTcard_Rats(bool Checked=false);
	void SLOTcard_Rebuild(bool Checked=false);
	void SLOTcard_Remake(bool Checked=false);
	void SLOTcard_Remodel(bool Checked=false);
	void SLOTcard_Rogue(bool Checked=false);
	void SLOTcard_RoyalSeal(bool Checked=false);
	void SLOTcard_RuinedLibrary(bool Checked=false);
	void SLOTcard_RuinedMarket(bool Checked=false);
	void SLOTcard_RuinedVillage(bool Checked=false);
	void SLOTcard_Saboteur(bool Checked=false);
	void SLOTcard_Sage(bool Checked=false);
	void SLOTcard_Salvager(bool Checked=false);
	void SLOTcard_Scavenger(bool Checked=false);
	void SLOTcard_Scout(bool Checked=false);
	void SLOTcard_ScryingPool(bool Checked=false);
	void SLOTcard_SeaHag(bool Checked=false);
	void SLOTcard_SecretChamber(bool Checked=false);
	void SLOTcard_ShantyTown(bool Checked=false);
	void SLOTcard_Silver(bool Checked=false);
	void SLOTcard_SirBailey(bool Checked=false);
	void SLOTcard_SirDestry(bool Checked=false);
	void SLOTcard_SirMartin(bool Checked=false);
	void SLOTcard_SirMichael(bool Checked=false);
	void SLOTcard_SirVander(bool Checked=false);
	void SLOTcard_Smithy(bool Checked=false);
	void SLOTcard_Smugglers(bool Checked=false);
	void SLOTcard_Soothsayer(bool Checked=false);
	void SLOTcard_Spoils(bool Checked=false);
	void SLOTcard_Spy(bool Checked=false);
	void SLOTcard_Squire(bool Checked=false);
	void SLOTcard_Stash(bool Checked=false);
	void SLOTcard_Steward(bool Checked=false);
	void SLOTcard_Stonemason(bool Checked=false);
	void SLOTcard_Storeroom(bool Checked=false);
	void SLOTcard_Survivors(bool Checked=false);
	void SLOTcard_Swindler(bool Checked=false);
	void SLOTcard_Tactician(bool Checked=false);
	void SLOTcard_Talisman(bool Checked=false);
	void SLOTcard_Taxman(bool Checked=false);
	void SLOTcard_Thief(bool Checked=false);
	void SLOTcard_ThroneRoom(bool Checked=false);
	void SLOTcard_Torturer(bool Checked=false);
	void SLOTcard_Tournament(bool Checked=false);
	void SLOTcard_TradeRoute(bool Checked=false);
	void SLOTcard_TradingPost(bool Checked=false);
	void SLOTcard_Transmute(bool Checked=false);
	void SLOTcard_TreasureMap(bool Checked=false);
	void SLOTcard_Treasury(bool Checked=false);
	void SLOTcard_Tribute(bool Checked=false);
	void SLOTcard_TrustySteed(bool Checked=false);
	void SLOTcard_University(bool Checked=false);
	void SLOTcard_Upgrade(bool Checked=false);
	void SLOTcard_Urchin(bool Checked=false);
	void SLOTcard_Vagrant(bool Checked=false);
	void SLOTcard_Vault(bool Checked=false);
	void SLOTcard_Venture(bool Checked=false);
	void SLOTcard_Village(bool Checked=false);
	void SLOTcard_Vineyard(bool Checked=false);
	void SLOTcard_WalledVillage(bool Checked=false);
	void SLOTcard_WanderingMinstrel(bool Checked=false);
	void SLOTcard_Warehouse(bool Checked=false);
	void SLOTcard_Watchtower(bool Checked=false);
	void SLOTcard_Wharf(bool Checked=false);
	void SLOTcard_WishingWell(bool Checked=false);
	void SLOTcard_Witch(bool Checked=false);
	void SLOTcard_Woodcutter(bool Checked=false);
	void SLOTcard_WorkersVillage(bool Checked=false);
	void SLOTcard_Workshop(bool Checked=false);
	void SLOTcard_YoungWitch(bool Checked=false);
	void on_StartSignal_clicked();

private:
	QToolButton		*card_AbandonedMine;
	QToolButton		*card_Adventurer;
	QToolButton		*card_Advisor;
	QToolButton		*card_Alchemist;
	QToolButton		*card_Altar;
	QToolButton		*card_Ambassador;
	QToolButton		*card_Apothecary;
	QToolButton		*card_Apprentice;
	QToolButton		*card_Armory;
	QToolButton		*card_BagofGold;
	QToolButton		*card_Baker;
	QToolButton		*card_BanditCamp;
	QToolButton		*card_BandofMisfits;
	QToolButton		*card_Bank;
	QToolButton		*card_Baron;
	QToolButton		*card_Bazaar;
	QToolButton		*card_Beggar;
	QToolButton		*card_Bishop;
	QToolButton		*card_BlackMarket;
	QToolButton		*card_Bridge;
	QToolButton		*card_Bureaucrat;
	QToolButton		*card_Butcher;
	QToolButton		*card_CandlestickMaker;
	QToolButton		*card_Caravan;
	QToolButton		*card_Catacombs;
	QToolButton		*card_Cellar;
	QToolButton		*card_Chancellor;
	QToolButton		*card_Chapel;
	QToolButton		*card_City;
	QToolButton		*card_Colony;
	QToolButton		*card_Conspirator;
	QToolButton		*card_Contraband;
	QToolButton		*card_Copper;
	QToolButton		*card_Coppersmith;
	QToolButton		*card_CouncilRoom;
	QToolButton		*card_Count;
	QToolButton		*card_Counterfeit;
	QToolButton		*card_CountingHouse;
	QToolButton		*card_Courtyard;
	QToolButton		*card_Cultist;
	QToolButton		*card_Curse;
	QToolButton		*card_Cutpurse;
	QToolButton		*card_DameAnna;
	QToolButton		*card_DameJosephine;
	QToolButton		*card_DameMolly;
	QToolButton		*card_DameNatalie;
	QToolButton		*card_DameSylvia;
	QToolButton		*card_DeathCart;
	QToolButton		*card_Diadem;
	QToolButton		*card_Doctor;
	QToolButton		*card_Duke;
	QToolButton		*card_Dutchy;
	QToolButton		*card_Embargo;
	QToolButton		*card_Envoy;
	QToolButton		*card_Estate;
	QToolButton		*card_Expand;
	QToolButton		*card_Explorer;
	QToolButton		*card_Fairgrounds;
	QToolButton		*card_Familiar;
	QToolButton		*card_FarmingVillage;
	QToolButton		*card_Feast;
	QToolButton		*card_Feodum;
	QToolButton		*card_Festival;
	QToolButton		*card_FishingVillage;
	QToolButton		*card_Followers;
	QToolButton		*card_Forager;
	QToolButton		*card_Forge;
	QToolButton		*card_Fortress;
	QToolButton		*card_FortuneTeller;
	QToolButton		*card_Gardens;
	QToolButton		*card_GhostShip;
	QToolButton		*card_Gold;
	QToolButton		*card_Golem;
	QToolButton		*card_Goons;
	QToolButton		*card_Governor;
	QToolButton		*card_GrandMarket;
	QToolButton		*card_Graverobber;
	QToolButton		*card_GreatHall;
	QToolButton		*card_Hamlet;
	QToolButton		*card_Harem;
	QToolButton		*card_Harvest;
	QToolButton		*card_Haven;
	QToolButton		*card_Herald;
	QToolButton		*card_Herbalist;
	QToolButton		*card_Hermit;
	QToolButton		*card_Hoard;
	QToolButton		*card_HornofPlenty;
	QToolButton		*card_HorseTraders;
	QToolButton		*card_Hovel;
	QToolButton		*card_HuntingGrounds;
	QToolButton		*card_HuntingParty;
	QToolButton		*card_Ironmonger;
	QToolButton		*card_Ironworks;
	QToolButton		*card_Island;
	QToolButton		*card_Jester;
	QToolButton		*card_Journeyman;
	QToolButton		*card_JunkDealer;
	QToolButton		*card_KingsCourt;
	QToolButton		*card_Laboratory;
	QToolButton		*card_Library;
	QToolButton		*card_Lighthouse;
	QToolButton		*card_Loan;
	QToolButton		*card_Lookout;
	QToolButton		*card_Madman;
	QToolButton		*card_Marauder;
	QToolButton		*card_Market;
	QToolButton		*card_MarketSquare;
	QToolButton		*card_Masquerade;
	QToolButton		*card_Masterpiece;
	QToolButton		*card_Menagerie;
	QToolButton		*card_Mercenary;
	QToolButton		*card_MerchantGuild;
	QToolButton		*card_MerchantShip;
	QToolButton		*card_Militia;
	QToolButton		*card_Mine;
	QToolButton		*card_MiningVillage;
	QToolButton		*card_Minion;
	QToolButton		*card_Mint;
	QToolButton		*card_Moat;
	QToolButton		*card_Moneylender;
	QToolButton		*card_Monument;
	QToolButton		*card_Mountebank;
	QToolButton		*card_Mystic;
	QToolButton		*card_NativeVillage;
	QToolButton		*card_Navigator;
	QToolButton		*card_Necropolis;
	QToolButton		*card_Nobles;
	QToolButton		*card_Outpost;
	QToolButton		*card_OvergrownEstate;
	QToolButton		*card_Pawn;
	QToolButton		*card_PearlDiver;
	QToolButton		*card_Peddler;
	QToolButton		*card_PhilosophersStone;
	QToolButton		*card_Pillage;
	QToolButton		*card_PirateShip;
	QToolButton		*card_Platinum;
	QToolButton		*card_Plaza;
	QToolButton		*card_PoorHouse;
	QToolButton		*card_Possession;
	QToolButton		*card_Potion;
	QToolButton		*card_Princess;
	QToolButton		*card_Procession;
	QToolButton		*card_Province;
	QToolButton		*card_Quarry;
	QToolButton		*card_Rabble;
	QToolButton		*card_Rats;
	QToolButton		*card_Rebuild;
	QToolButton		*card_Remake;
	QToolButton		*card_Remodel;
	QToolButton		*card_Rogue;
	QToolButton		*card_RoyalSeal;
	QToolButton		*card_RuinedLibrary;
	QToolButton		*card_RuinedMarket;
	QToolButton		*card_RuinedVillage;
	QToolButton		*card_Saboteur;
	QToolButton		*card_Sage;
	QToolButton		*card_Salvager;
	QToolButton		*card_Scavenger;
	QToolButton		*card_Scout;
	QToolButton		*card_ScryingPool;
	QToolButton		*card_SeaHag;
	QToolButton		*card_SecretChamber;
	QToolButton		*card_ShantyTown;
	QToolButton		*card_Silver;
	QToolButton		*card_SirBailey;
	QToolButton		*card_SirDestry;
	QToolButton		*card_SirMartin;
	QToolButton		*card_SirMichael;
	QToolButton		*card_SirVander;
	QToolButton		*card_Smithy;
	QToolButton		*card_Smugglers;
	QToolButton		*card_Soothsayer;
	QToolButton		*card_Spoils;
	QToolButton		*card_Spy;
	QToolButton		*card_Squire;
	QToolButton		*card_Stash;
	QToolButton		*card_Steward;
	QToolButton		*card_Stonemason;
	QToolButton		*card_Storeroom;
	QToolButton		*card_Survivors;
	QToolButton		*card_Swindler;
	QToolButton		*card_Tactician;
	QToolButton		*card_Talisman;
	QToolButton		*card_Taxman;
	QToolButton		*card_Thief;
	QToolButton		*card_ThroneRoom;
	QToolButton		*card_Torturer;
	QToolButton		*card_Tournament;
	QToolButton		*card_TradeRoute;
	QToolButton		*card_TradingPost;
	QToolButton		*card_Transmute;
	QToolButton		*card_TreasureMap;
	QToolButton		*card_Treasury;
	QToolButton		*card_Tribute;
	QToolButton		*card_TrustySteed;
	QToolButton		*card_University;
	QToolButton		*card_Upgrade;
	QToolButton		*card_Urchin;
	QToolButton		*card_Vagrant;
	QToolButton		*card_Vault;
	QToolButton		*card_Venture;
	QToolButton		*card_Village;
	QToolButton		*card_Vineyard;
	QToolButton		*card_WalledVillage;
	QToolButton		*card_WanderingMinstrel;
	QToolButton		*card_Warehouse;
	QToolButton		*card_Watchtower;
	QToolButton		*card_Wharf;
	QToolButton		*card_WishingWell;
	QToolButton		*card_Witch;
	QToolButton		*card_Woodcutter;
	QToolButton		*card_WorkersVillage;
	QToolButton		*card_Workshop;
	QToolButton		*card_YoungWitch;
};

#endif // DOMINIONLINUX_H
